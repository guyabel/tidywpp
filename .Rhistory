d1
variant_id
variant_id = 2
vv <- wpp_var %>%
filter(wpp == wpp_version)
if(!any(variant_id  %in% vv$VarID))
stop("variant_id not avialable in wpp_version")
vv
g <- indicator_file_group
if(is.null(g)){
f <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version) %>%
select(file_group, name) %>%
distinct()
g <- f %>%
slice(1) %>%
select(file_group) %>%
pull()
# if(length(unique(f$file_group)) > 1)
#   message(paste("Indicators from more than one file group.\n\nOnly downloading indicators in:", g, "\n\nNeed multiple get_wpp() calls to get indicators in different file groups. See ?wpp_indicators and ?find_indicators for more information on file groups."))
gg <- unique(f$file_group)
if(length(gg) > 1 & messages){
message(paste0("Downloading from ", gg[1]))
for(i in 2:length(gg)){
message(paste0("Also available in: ", gg[i]))
}
message("Use indicator_file_group to get alternative measures")
}
}
d0 <- tibble(
name = "base",
file_group = g,
var_id = variant_id
)
d0
d1 <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version,
file_group == g) %>%
select(-contains("details"), -variant, -wpp) %>%
bind_rows(d0, .) %>%
arrange(var_id) %>%
mutate(u = paste0("https://raw.githubusercontent.com/guyabel/tidywpp/main/build-data/WPP",
wpp_version, "/", file_group, "/", var_id, "/", name, ".csv"),
i = map(.x = u, .f = ~read_csv(file = .x, col_types = readr::cols(), guess_max = 1e1))) %>%
# keep file group for later matching
dplyr::group_by(var_id, file_group) %>%
dplyr::summarise(dplyr::bind_cols(i), .groups = "drop_last") %>%
dplyr::ungroup()
d1
get_wpp <- function(indicator = NULL,
indicator_file_group = NULL,
variant_id = 2,
wpp_version = 2019,
clean_names = FALSE,
fct_age = TRUE,
drop_id_cols = FALSE,
tidy_pop_sex = FALSE,
messages = TRUE){
# indicator = c("PopTotal", "SRB")
# indicator = c("PopTotal", "PopMale", "PopFemale")
# indicator = "PopTotal";
# indicator_file_group = NULL;
# variant_id = 2;
# wpp_version = 2019;
# clean_names = TRUE; fct_age = TRUE;
# drop_id_cols = TRUE; tidy_pop_sex = TRUE
# messages = TRUE
vv <- wpp_var %>%
filter(wpp == wpp_version)
if(!any(variant_id  %in% vv$VarID))
stop("variant_id not avialable in wpp_version")
# work out file group for the indicator(s)
g <- indicator_file_group
if(is.null(g)){
f <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version) %>%
select(file_group, name) %>%
distinct()
g <- f %>%
slice(1) %>%
select(file_group) %>%
pull()
# if(length(unique(f$file_group)) > 1)
#   message(paste("Indicators from more than one file group.\n\nOnly downloading indicators in:", g, "\n\nNeed multiple get_wpp() calls to get indicators in different file groups. See ?wpp_indicators and ?find_indicators for more information on file groups."))
gg <- unique(f$file_group)
if(length(gg) > 1 & messages){
message(paste0("Downloading from ", gg[1]))
for(i in 2:length(gg)){
message(paste0("Also available in: ", gg[i]))
}
message("Use indicator_file_group to get alternative measures")
}
}
# build url address to download from
d0 <- tibble(
name = "base",
file_group = g,
var_id = variant_id
)
d1 <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version,
file_group == g) %>%
select(-contains("details"), -variant, -wpp) %>%
bind_rows(d0, .) %>%
arrange(var_id) %>%
mutate(u = paste0("https://raw.githubusercontent.com/guyabel/tidywpp/main/build-data/WPP",
wpp_version, "/", file_group, "/", var_id, "/", name, ".csv"),
i = map(.x = u, .f = ~read_csv(file = .x, col_types = readr::cols(), guess_max = 1e1))) %>%
# keep file group for later matching
dplyr::group_by(var_id, file_group) %>%
dplyr::summarise(dplyr::bind_cols(i), .groups = "drop_last") %>%
dplyr::ungroup()
v <- wpp_var %>%
filter(wpp == wpp_version) %>%
select(starts_with("Var"))
l <- wpp_loc %>%
filter(wpp == wpp_version) %>%
select(-wpp)
y <- wpp_time %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(-wpp, -file_group) %>%
mutate(Time = ifelse(str_detect(string = Time, pattern = "-"),
yes = Time, no = as.integer(Time)))
a <- NULL
if(any(str_detect(names(d1), "Age"))){
a <- wpp_age %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(contains("Age"))
}
s <- NULL
if(any(str_detect(names(d1), "Sex"))){
s <- wpp_sex %>%
filter(wpp == wpp,
file_group == g) %>%
select(contains("Sex"))
}
d1 %>%
select(-file_group) %>%
rename(VarID = var_id) %>%
left_join(v, by = "VarID") %>%
left_join(l, by = "LocID") %>%
left_join(y, by = "Time") %>%
{if(is.null(a)) . else left_join(., a, by = "AgeGrp")} %>%
{if(is.null(s)) . else left_join(., s, by = "SexID")} %>%
relocate(contains("Loc"), contains("Var"), Time, MidPeriod, contains("Age"), contains("Sex")) %>%
{if(fct_age & !is.null(a)) dplyr::mutate(., AgeGrp = forcats::fct_inorder(AgeGrp)) else .} %>%
{if(drop_id_cols) dplyr::select(., -dplyr::any_of(c("MidPeriod", "AgeGrpStart", "AgeGrpSpan", "LocID", "SexID", "VarID"))) else .} %>%
{if(tidy_pop_sex & str_detect(string = g, pattern = "Pop")) tidyr::pivot_longer(data = ., cols = contains("Pop"), names_to = "Sex", values_to = "Pop", names_prefix = "Pop") else .} %>%
{if(clean_names) janitor::clean_names(.) else .}
}
get_wpp(indicator = c("ax", "ex", "Sx", "ax"), wpp_version = 2010)
get_wpp(indicator = c("ax", "ex", "Sx"), wpp_version = 2010,  drop_id_cols = TRUE)
d1
d1 <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version,
file_group == g) %>%
select(-contains("details"), -variant, -wpp) %>%
bind_rows(d0, .) %>%
arrange(var_id) %>%
mutate(u = paste0("https://raw.githubusercontent.com/guyabel/tidywpp/main/build-data/WPP",
wpp_version, "/", file_group, "/", var_id, "/", name, ".csv"),
i = map(.x = u, .f = ~read_csv(file = .x, col_types = readr::cols(), guess_max = 1e1))) %>%
# keep file group for later matching
dplyr::group_by(var_id, file_group) %>%
dplyr::summarise(dplyr::bind_cols(i), .groups = "drop_last") %>%
dplyr::ungroup()
v <- wpp_var %>%
filter(wpp == wpp_version) %>%
select(starts_with("Var"))
l <- wpp_loc %>%
filter(wpp == wpp_version) %>%
select(-wpp)
y <- wpp_time %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(-wpp, -file_group) %>%
mutate(Time = ifelse(str_detect(string = Time, pattern = "-"),
yes = Time, no = as.integer(Time)))
a <- NULL
if(any(str_detect(names(d1), "Age"))){
a <- wpp_age %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(contains("Age"))
}
s <- NULL
if(any(str_detect(names(d1), "Sex"))){
s <- wpp_sex %>%
filter(wpp == wpp,
file_group == g) %>%
select(contains("Sex"))
}
d1
d1 %>%
select(-file_group) %>%
rename(VarID = var_id) %>%
left_join(v, by = "VarID") %>%
left_join(l, by = "LocID") %>%
left_join(y, by = "Time")
d1 %>%
select(-file_group) %>%
rename(VarID = var_id) %>%
left_join(v, by = "VarID") %>%
left_join(l, by = "LocID") %>%
left_join(y, by = "Time") %>%
{if(is.null(a)) . else left_join(., a, by = "AgeGrp")} %>%
{if(is.null(s)) . else left_join(., s, by = "SexID")}
a <- wpp_age %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(contains("Age"))
a
d1
wpp_age
View(a)
tabld(d1$AgeGrp)
table(d1$AgeGrp)
d1 %>%
select(-file_group) %>%
rename(VarID = var_id) %>%
left_join(v, by = "VarID") %>%
left_join(l, by = "LocID") %>%
left_join(y, by = "Time")
d1 %>%
select(-file_group) %>%
rename(VarID = var_id) %>%
left_join(v, by = "VarID") %>%
left_join(l, by = "LocID") %>%
left_join(y, by = "Time") %>%
{if(is.null(a)) . else left_join(., a, by = "AgeGrp")}
d1 %>%
select(-file_group) %>%
rename(VarID = var_id) %>%
left_join(v, by = "VarID") %>%
left_join(l, by = "LocID") %>%
left_join(y, by = "Time") %>%
{if(is.null(a)) . else left_join(., a, by = "AgeGrp")} %>%
{if(is.null(s)) . else left_join(., s, by = "SexID")}
s
wpp_sex %>%
filter(wpp == wpp,
file_group == g)
wpp_sex <- read_csv("./build-data/meta/sex.csv")
wpp_sex
table(wpp_sex$file_group)
wpp_sex %>%
filter(wpp == wpp,
file_group == g)
s <- wpp_sex %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(contains("Sex"))
s
wpp_sex %>%
filter(wpp == wpp_version,
file_group == g)
View(wpp_sex)
wpp_sex
wpp_sex %>%
distinct()
wpp_sex %>%
distinct() %>%
write_csv("./build-data/meta/sex.csv")
wpp_sex <- read_csv("./build-data/meta/sex.csv")
wpp_sex
tail(wpp_sex)
wpp_sex <- read_csv("./build-data/meta/sex.csv")
usethis::use_data(wpp_sex, overwrite = TRUE, internal = TRUE)
s <- NULL
if(any(str_detect(names(d1), "Sex"))){
s <- wpp_sex %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(contains("Sex"))
}
s
get_wpp <- function(indicator = NULL,
indicator_file_group = NULL,
variant_id = 2,
wpp_version = 2019,
clean_names = FALSE,
fct_age = TRUE,
drop_id_cols = FALSE,
tidy_pop_sex = FALSE,
messages = TRUE){
# indicator = c("PopTotal", "SRB")
# indicator = c("PopTotal", "PopMale", "PopFemale")
# indicator = "PopTotal";
# indicator_file_group = NULL;
# variant_id = 2;
# wpp_version = 2019;
# clean_names = TRUE; fct_age = TRUE;
# drop_id_cols = TRUE; tidy_pop_sex = TRUE
# messages = TRUE
vv <- wpp_var %>%
filter(wpp == wpp_version)
if(!any(variant_id  %in% vv$VarID))
stop("variant_id not avialable in wpp_version")
# work out file group for the indicator(s)
g <- indicator_file_group
if(is.null(g)){
f <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version) %>%
select(file_group, name) %>%
distinct()
g <- f %>%
slice(1) %>%
select(file_group) %>%
pull()
# if(length(unique(f$file_group)) > 1)
#   message(paste("Indicators from more than one file group.\n\nOnly downloading indicators in:", g, "\n\nNeed multiple get_wpp() calls to get indicators in different file groups. See ?wpp_indicators and ?find_indicators for more information on file groups."))
gg <- unique(f$file_group)
if(length(gg) > 1 & messages){
message(paste0("Downloading from ", gg[1]))
for(i in 2:length(gg)){
message(paste0("Also available in: ", gg[i]))
}
message("Use indicator_file_group to get alternative measures")
}
}
# build url address to download from
d0 <- tibble(
name = "base",
file_group = g,
var_id = variant_id
)
d1 <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version,
file_group == g) %>%
select(-contains("details"), -variant, -wpp) %>%
bind_rows(d0, .) %>%
arrange(var_id) %>%
mutate(u = paste0("https://raw.githubusercontent.com/guyabel/tidywpp/main/build-data/WPP",
wpp_version, "/", file_group, "/", var_id, "/", name, ".csv"),
i = map(.x = u, .f = ~read_csv(file = .x, col_types = readr::cols(), guess_max = 1e1))) %>%
# keep file group for later matching
dplyr::group_by(var_id, file_group) %>%
dplyr::summarise(dplyr::bind_cols(i), .groups = "drop_last") %>%
dplyr::ungroup()
v <- wpp_var %>%
filter(wpp == wpp_version) %>%
select(starts_with("Var"))
l <- wpp_loc %>%
filter(wpp == wpp_version) %>%
select(-wpp)
y <- wpp_time %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(-wpp, -file_group) %>%
mutate(Time = ifelse(str_detect(string = Time, pattern = "-"),
yes = Time, no = as.integer(Time)))
a <- NULL
if(any(str_detect(names(d1), "Age"))){
a <- wpp_age %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(contains("Age"))
}
s <- NULL
if(any(str_detect(names(d1), "Sex"))){
s <- wpp_sex %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(contains("Sex"))
}
d1 %>%
select(-file_group) %>%
rename(VarID = var_id) %>%
left_join(v, by = "VarID") %>%
left_join(l, by = "LocID") %>%
left_join(y, by = "Time") %>%
{if(is.null(a)) . else left_join(., a, by = "AgeGrp")} %>%
{if(is.null(s)) . else left_join(., s, by = "SexID")} %>%
relocate(contains("Loc"), contains("Var"), Time, MidPeriod, contains("Age"), contains("Sex")) %>%
{if(fct_age & !is.null(a)) dplyr::mutate(., AgeGrp = forcats::fct_inorder(AgeGrp)) else .} %>%
{if(drop_id_cols) dplyr::select(., -dplyr::any_of(c("MidPeriod", "AgeGrpStart", "AgeGrpSpan", "LocID", "SexID", "VarID"))) else .} %>%
{if(tidy_pop_sex & str_detect(string = g, pattern = "Pop")) tidyr::pivot_longer(data = ., cols = contains("Pop"), names_to = "Sex", values_to = "Pop", names_prefix = "Pop") else .} %>%
{if(clean_names) janitor::clean_names(.) else .}
}
get_wpp(indicator = c("ax", "ex", "Sx"), wpp_version = 2010,  drop_id_cols = TRUE)
get_wpp(indicator = c("qx", "lx", "dx", "Lx", "Tx", "ex"), wpp_version = 2010,  drop_id_cols = TRUE)
get_wpp(indicator = c("qx", "lx", "dx", "Lx", "Tx", "ex"), wpp_version = 2010,  drop_id_cols = TRUE)
indicator = c("qx", "lx", "dx", "Lx", "Tx", "ex")
get_wpp(indicator = c("qx", "lx", "dx", "Lx", "Tx", "ex"), wpp_version = 2019, drop_id_cols = TRUE)
# clean_names = TRUE; fct_age = TRUE;
# drop_id_cols = TRUE; tidy_pop_sex = TRUE
# messages = TRUE
vv <- wpp_var %>%
filter(wpp == wpp_version)
if(!any(variant_id  %in% vv$VarID))
stop("variant_id not avialable in wpp_version")
# work out file group for the indicator(s)
g <- indicator_file_group
if(is.null(g)){
f <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version) %>%
select(file_group, name) %>%
distinct()
g <- f %>%
slice(1) %>%
select(file_group) %>%
pull()
# if(length(unique(f$file_group)) > 1)
#   message(paste("Indicators from more than one file group.\n\nOnly downloading indicators in:", g, "\n\nNeed multiple get_wpp() calls to get indicators in different file groups. See ?wpp_indicators and ?find_indicators for more information on file groups."))
gg <- unique(f$file_group)
if(length(gg) > 1 & messages){
message(paste0("Downloading from ", gg[1]))
for(i in 2:length(gg)){
message(paste0("Also available in: ", gg[i]))
}
message("Use indicator_file_group to get alternative measures")
}
}
# build url address to download from
d0 <- tibble(
name = "base",
file_group = g,
var_id = variant_id
)
d1 <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version,
file_group == g) %>%
select(-contains("details"), -variant, -wpp) %>%
bind_rows(d0, .) %>%
arrange(var_id) %>%
mutate(u = paste0("https://raw.githubusercontent.com/guyabel/tidywpp/main/build-data/WPP",
wpp_version, "/", file_group, "/", var_id, "/", name, ".csv"),
i = map(.x = u, .f = ~read_csv(file = .x, col_types = readr::cols(), guess_max = 1e1))) %>%
# keep file group for later matching
dplyr::group_by(var_id, file_group) %>%
dplyr::summarise(dplyr::bind_cols(i), .groups = "drop_last") %>%
dplyr::ungroup()
v <- wpp_var %>%
filter(wpp == wpp_version) %>%
select(starts_with("Var"))
l <- wpp_loc %>%
filter(wpp == wpp_version) %>%
select(-wpp)
y <- wpp_time %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(-wpp, -file_group) %>%
mutate(Time = ifelse(str_detect(string = Time, pattern = "-"),
yes = Time, no = as.integer(Time)))
a <- NULL
if(any(str_detect(names(d1), "Age"))){
a <- wpp_age %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(contains("Age"))
}
s <- NULL
if(any(str_detect(names(d1), "Sex"))){
s <- wpp_sex %>%
filter(wpp == wpp_version,
file_group == g) %>%
select(contains("Sex"))
}
d0
d1 <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version,
file_group == g) %>%
select(-contains("details"), -variant, -wpp) %>%
bind_rows(d0, .) %>%
arrange(var_id)
d1
d1 <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version,
file_group == g) %>%
select(-contains("details"), -variant, -wpp) %>%
bind_rows(d0, .) %>%
arrange(var_id) %>%
mutate(u = paste0("https://raw.githubusercontent.com/guyabel/tidywpp/main/build-data/WPP",
wpp_version, "/", file_group, "/", var_id, "/", name, ".csv"),
i = map(.x = u, .f = ~read_csv(file = .x, col_types = readr::cols(), guess_max = 1e1)))
d1 <- wpp_indicators %>%
filter(name %in% indicator,
var_id %in% variant_id,
wpp == wpp_version,
file_group == g) %>%
select(-contains("details"), -variant, -wpp) %>%
bind_rows(d0, .) %>%
arrange(var_id) %>%
mutate(u = paste0("https://raw.githubusercontent.com/guyabel/tidywpp/main/build-data/WPP",
wpp_version, "/", file_group, "/", var_id, "/", name, ".csv"))
d1$u
get_wpp(indicator = c("qx", "lx", "dx", "Tx", "ex"), wpp_version = 2010, drop_id_cols = TRUE)
get_wpp(indicator = c("qx", "Lx", "dx", "Tx", "ex"), wpp_version = 2010, drop_id_cols = TRUE)
